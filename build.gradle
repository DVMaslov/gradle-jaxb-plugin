buildscript{ 
  apply from: 'buildscript.gradle'
}

apply plugin: 'groovy'
apply plugin: 'maven'
apply from: 'cobertura.gradle'

group = 'com.jacobo.gradle.plugins'

repositories { 
  mavenCentral()
  maven {
    url 'http://dl.bintray.com/content/djmijares/gradle-plugins/'
  }
}

dependencies {
   compile gradleApi()
   compile localGroovy()
   compile 'org.gradle.jacobo:gradle-xsd-wsdl-slurping:1.0.3'
   compile 'com.google.inject:guice:3.0'
   testCompile "org.spockframework:spock-core:0.7-groovy-1.8"
   testCompile 'cglib:cglib-nodep:2.2'
   testCompile 'org.objenesis:objenesis:1.2'
}

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task unversionedJar (type: Jar, dependsOn: 'jar') {
	version = null
	from sourceSets.main.output
}

task installPlugin (type: Copy, dependsOn: 'unversionedJar') {
	def gradleInstallDir = gradle.gradleHomeDir
	group = 'installation'
	description = 'Installs the plugin jar in your gradle distribution.'
	from "${buildDir}/libs/${unversionedJar.archiveName}"
	into "/${gradleInstallDir}/lib/plugins"
	doLast { 
	  println "Installed in: ${gradleInstallDir}/lib/plugins as: ${unversionedJar.archiveName}"
	}
}

task uninstallPlugin (type: Delete) {
	def gradleInstallDir = gradle.gradleHomeDir
	group = 'installation'
	description = 'Removes the plugin from your gradle distribution.'
	delete("/${gradleInstallDir}/lib/plugins/${unversionedJar.archiveName}")
}

uploadArchives {
  repositories {
    mavenDeployer {
      repository(url : bintray_api_base_url + '/maven/' + bintray_username + '/' + bintray_repo + '/' + bintray_package + '/') {
	try {
	  authentication(userName: bintray_username, password: bintray_api_key)
	} catch (MissingPropertyException pne) {
	  // ignore, don't authenticate
	}
      }
      pom {
	project {
	  name 'gradle-jaxb-plugin'
	  description 'A Gradle plugin for parsing a diretory of XSDs, graphing them out based on namespace dependencies, and generating binding files for other folders to bind off of and not have to regenerate the same schema objects again'
	  url 'https://github.com/djmijaes/gradle-jaxb-plugin'
	  licenses {
	    license {
	      name 'Apache License, Version 2.0'
	      url 'http://www.apache.org/licenses/LICENSE-2.0'
	      distribution 'repo'
	    }
	  }
	  developers {
	    developer {
	      id 'djmijares'
	      name 'Daniel Mijares'
	      email 'daniel.j.mijares@gmail.com'
	    }
	  }
	}
      }   
      // // Dirty hack for GRADLE-1285
      // pom.withXml { root ->
      //     def children = root.asNode().children()
      //     def versionIndex = children.indexOf(children.find {it.name().localPart == 'version'})
      //     children.add(versionIndex + 1, new Node(null, 'packaging', 'jar'))
      // }
    }
  }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.6'
}